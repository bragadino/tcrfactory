["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:externs",["^ ","~$Date",["^ ","~$prototype",["^ ","~$getTime",["^ "]]]],"~:use-macros",["^ "],"~:excludes",["~#set",[]],"~:name","~$cljs-web3.evm","~:imports",null,"~:requires",["^ ","~$cljs-web3.utils","^="],"~:cljs.spec/speced-vars",[],"~:uses",["^ ","~$js->cljkk","^=","~$callback-js->clj","^="],"~:defs",["^ ","~$mine-jsonrpc",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","/Users/matus/www/district0x/tcrfactory/resources/public/js/compiled/out/cljs_web3/evm.cljs","~:line",66,"~:column",8,"~:end-line",66,"~:end-column",20,"~:private",true,"~:arglists",["~#list",["~$quote",["^M",[[]]]]]],"^K",true,"^9","~$cljs-web3.evm/mine-jsonrpc","~:variadic",false,"^F","resources/public/js/compiled/out/cljs_web3/evm.cljs","^J",20,"~:method-params",["^M",[[]]],"~:protocol-impl",null,"~:arglists-meta",["^M",[null,null]],"^H",1,"^G",66,"^I",66,"~:max-fixed-arity",0,"~:fn-var",true,"^L",["^M",["^N",["^M",[[]]]]]],"~$revert!",["^ ","^D",null,"^E",["^ ","^F","/Users/matus/www/district0x/tcrfactory/resources/public/js/compiled/out/cljs_web3/evm.cljs","^G",95,"^H",7,"^I",95,"^J",14,"^L",["^M",["^N",["^M",[["~$web3","~$args","~$&",["~$callback"]]]]]],"~:doc","Revert the state of the blockchain to a previous snapshot.\n\n  Takes a single\n  parameter, which is the snapshot id to revert to. If no snapshot id is passed\n  it will revert to the latest snapshot. Returns true.\n\n  Parameters:\n  web3     - web3 instance\n  args     - snapshot id to revert to, if no snapshot id is passed, it will\n             revert to the latest snapshot\n  callback - callback with two parameters, error and result.\n\n  Returns true.\n\n  Example:\n  user> `(web3-evm/revert! web3 0 callback)`","~:top-fn",["^ ","^P",true,"^T",2,"^Q",[["^M",["^W","^X",["^Y"]]]],"^L",["^M",[["^W","^X","~$&",["^Y"]]]],"^S",["^M",[null]]]],"^9","~$cljs-web3.evm/revert!","^P",true,"^F","resources/public/js/compiled/out/cljs_web3/evm.cljs","^J",14,"^[",["^ ","^P",true,"^T",2,"^Q",[["^M",["^W","^X",["^Y"]]]],"^L",["^M",[["^W","^X","~$&",["^Y"]]]],"^S",["^M",[null]]],"^Q",[["^M",["^W","^X",["^Y"]]]],"^R",null,"^S",["^M",[null]],"^H",1,"^G",95,"^I",95,"^T",2,"^U",true,"^L",["^M",[["^W","^X","~$&",["^Y"]]]],"^Z","Revert the state of the blockchain to a previous snapshot.\n\n  Takes a single\n  parameter, which is the snapshot id to revert to. If no snapshot id is passed\n  it will revert to the latest snapshot. Returns true.\n\n  Parameters:\n  web3     - web3 instance\n  args     - snapshot id to revert to, if no snapshot id is passed, it will\n             revert to the latest snapshot\n  callback - callback with two parameters, error and result.\n\n  Returns true.\n\n  Example:\n  user> `(web3-evm/revert! web3 0 callback)`"],"~$revert-jsonrpc",["^ ","^D",null,"^E",["^ ","^F","/Users/matus/www/district0x/tcrfactory/resources/public/js/compiled/out/cljs_web3/evm.cljs","^G",89,"^H",8,"^I",89,"^J",22,"^K",true,"^L",["^M",["^N",["^M",[["^X"]]]]]],"^K",true,"^9","~$cljs-web3.evm/revert-jsonrpc","^P",false,"^F","resources/public/js/compiled/out/cljs_web3/evm.cljs","^J",22,"^Q",["^M",[["^X"]]],"^R",null,"^S",["^M",[null,null]],"^H",1,"^G",89,"^I",89,"^T",1,"^U",true,"^L",["^M",["^N",["^M",[["^X"]]]]]],"~$mine!",["^ ","^D",null,"^E",["^ ","^F","/Users/matus/www/district0x/tcrfactory/resources/public/js/compiled/out/cljs_web3/evm.cljs","^G",72,"^H",7,"^I",72,"^J",12,"^L",["^M",["^N",["^M",[["^W","~$&",["^Y"]]]]]],"^Z","Force a block to be mined. Mines a block independent of\n  whether or not mining is started or stopped.\n\n  Parameters:\n  web3     - web3 instance\n  callback - callback with two parameters, error and result.\n\n  Example:\n  user> `(web3-evm/mine! web3 callback)`","^[",["^ ","^P",true,"^T",1,"^Q",[["^M",["^W",["^Y"]]]],"^L",["^M",[["^W","~$&",["^Y"]]]],"^S",["^M",[null]]]],"^9","~$cljs-web3.evm/mine!","^P",true,"^F","resources/public/js/compiled/out/cljs_web3/evm.cljs","^J",12,"^[",["^ ","^P",true,"^T",1,"^Q",[["^M",["^W",["^Y"]]]],"^L",["^M",[["^W","~$&",["^Y"]]]],"^S",["^M",[null]]],"^Q",[["^M",["^W",["^Y"]]]],"^R",null,"^S",["^M",[null]],"^H",1,"^G",72,"^I",72,"^T",1,"^U",true,"^L",["^M",[["^W","~$&",["^Y"]]]],"^Z","Force a block to be mined. Mines a block independent of\n  whether or not mining is started or stopped.\n\n  Parameters:\n  web3     - web3 instance\n  callback - callback with two parameters, error and result.\n\n  Example:\n  user> `(web3-evm/mine! web3 callback)`"],"~$increase-time!",["^ ","^D",null,"^E",["^ ","^F","/Users/matus/www/district0x/tcrfactory/resources/public/js/compiled/out/cljs_web3/evm.cljs","^G",45,"^H",7,"^I",45,"^J",21,"^L",["^M",["^N",["^M",[["^W","^X","~$&",["^Y"]]]]]],"^Z","Jump forward in time in the EVM.\n\n  Parameters:\n  web3     - web3 instance\n  args     - The amount of time to increase in seconds.\n  callback - callback with two parameters, error and result.\n\n  Returns the total time adjustment, in seconds.\n\n  Example:\n  user> `(web3-evm/increase-time! web3 [1000] callback)`","^[",["^ ","^P",true,"^T",2,"^Q",[["^M",["^W","^X",["^Y"]]]],"^L",["^M",[["^W","^X","~$&",["^Y"]]]],"^S",["^M",[null]]]],"^9","~$cljs-web3.evm/increase-time!","^P",true,"^F","resources/public/js/compiled/out/cljs_web3/evm.cljs","^J",21,"^[",["^ ","^P",true,"^T",2,"^Q",[["^M",["^W","^X",["^Y"]]]],"^L",["^M",[["^W","^X","~$&",["^Y"]]]],"^S",["^M",[null]]],"^Q",[["^M",["^W","^X",["^Y"]]]],"^R",null,"^S",["^M",[null]],"^H",1,"^G",45,"^I",45,"^T",2,"^U",true,"^L",["^M",[["^W","^X","~$&",["^Y"]]]],"^Z","Jump forward in time in the EVM.\n\n  Parameters:\n  web3     - web3 instance\n  args     - The amount of time to increase in seconds.\n  callback - callback with two parameters, error and result.\n\n  Returns the total time adjustment, in seconds.\n\n  Example:\n  user> `(web3-evm/increase-time! web3 [1000] callback)`"],"~$increase-time-jsonrpc",["^ ","^D",null,"^E",["^ ","^F","/Users/matus/www/district0x/tcrfactory/resources/public/js/compiled/out/cljs_web3/evm.cljs","^G",39,"^H",8,"^I",39,"^J",29,"^K",true,"^L",["^M",["^N",["^M",[["^X"]]]]]],"^K",true,"^9","~$cljs-web3.evm/increase-time-jsonrpc","^P",false,"^F","resources/public/js/compiled/out/cljs_web3/evm.cljs","^J",29,"^Q",["^M",[["^X"]]],"^R",null,"^S",["^M",[null,null]],"^H",1,"^G",39,"^I",39,"^T",1,"^U",true,"^L",["^M",["^N",["^M",[["^X"]]]]]],"~$snapshot!",["^ ","^D",null,"^E",["^ ","^F","/Users/matus/www/district0x/tcrfactory/resources/public/js/compiled/out/cljs_web3/evm.cljs","^G",126,"^H",7,"^I",126,"^J",16,"^L",["^M",["^N",["^M",[["^W","~$&",["^Y"]]]]]],"^Z","Snapshot the state of the blockchain at the current block.\n\n  Parameters:\n  web3     - web3 instance\n  callback - callback with two parameters, error and result.\n\n  Returns the integer id of the snapshot created.\n\n  Example:\n  user> `(web3-evm/snapshot! web3 callback)`\n  0","^[",["^ ","^P",true,"^T",1,"^Q",[["^M",["^W",["^Y"]]]],"^L",["^M",[["^W","~$&",["^Y"]]]],"^S",["^M",[null]]]],"^9","~$cljs-web3.evm/snapshot!","^P",true,"^F","resources/public/js/compiled/out/cljs_web3/evm.cljs","^J",16,"^[",["^ ","^P",true,"^T",1,"^Q",[["^M",["^W",["^Y"]]]],"^L",["^M",[["^W","~$&",["^Y"]]]],"^S",["^M",[null]]],"^Q",[["^M",["^W",["^Y"]]]],"^R",null,"^S",["^M",[null]],"^H",1,"^G",126,"^I",126,"^T",1,"^U",true,"^L",["^M",[["^W","~$&",["^Y"]]]],"^Z","Snapshot the state of the blockchain at the current block.\n\n  Parameters:\n  web3     - web3 instance\n  callback - callback with two parameters, error and result.\n\n  Returns the integer id of the snapshot created.\n\n  Example:\n  user> `(web3-evm/snapshot! web3 callback)`\n  0"],"~$send-sync-fn",["^ ","^D",null,"^E",["^ ","^F","/Users/matus/www/district0x/tcrfactory/resources/public/js/compiled/out/cljs_web3/evm.cljs","^G",9,"^H",7,"^I",9,"^J",19,"^L",["^M",["^N",["^M",[["^W"]]]]],"^Z","Creates an fn that sends synchronous function to the currentProvider.\n\n  Parameter:\n  web3 - web3 instance\n\n  Example:\n  user> `(send-async-fn web3)`\n  #object..."],"^9","~$cljs-web3.evm/send-sync-fn","^P",false,"^F","resources/public/js/compiled/out/cljs_web3/evm.cljs","^J",19,"^Q",["^M",[["^W"]]],"^R",null,"^S",["^M",[null,null]],"^H",1,"^G",9,"^I",9,"^T",1,"^U",true,"^L",["^M",["^N",["^M",[["^W"]]]]],"^Z","Creates an fn that sends synchronous function to the currentProvider.\n\n  Parameter:\n  web3 - web3 instance\n\n  Example:\n  user> `(send-async-fn web3)`\n  #object..."],"~$snapshot-jsonrpc",["^ ","^D",null,"^E",["^ ","^F","/Users/matus/www/district0x/tcrfactory/resources/public/js/compiled/out/cljs_web3/evm.cljs","^G",120,"^H",8,"^I",120,"^J",24,"^K",true,"^L",["^M",["^N",["^M",[[]]]]]],"^K",true,"^9","~$cljs-web3.evm/snapshot-jsonrpc","^P",false,"^F","resources/public/js/compiled/out/cljs_web3/evm.cljs","^J",24,"^Q",["^M",[[]]],"^R",null,"^S",["^M",[null,null]],"^H",1,"^G",120,"^I",120,"^T",0,"^U",true,"^L",["^M",["^N",["^M",[[]]]]]],"~$send-async-fn",["^ ","^D",null,"^E",["^ ","^F","/Users/matus/www/district0x/tcrfactory/resources/public/js/compiled/out/cljs_web3/evm.cljs","^G",24,"^H",7,"^I",24,"^J",20,"^L",["^M",["^N",["^M",[["^W"]]]]],"^Z","Creates an fn that sends asynchronous function to the currentProvider.\n\n  Parameter:\n  web3 - web3 instance\n\n  Example:\n  user> `(send-async-fn web3)`\n  #object..."],"^9","~$cljs-web3.evm/send-async-fn","^P",false,"^F","resources/public/js/compiled/out/cljs_web3/evm.cljs","^J",20,"^Q",["^M",[["^W"]]],"^R",null,"^S",["^M",[null,null]],"^H",1,"^G",24,"^I",24,"^T",1,"^U",true,"^L",["^M",["^N",["^M",[["^W"]]]]],"^Z","Creates an fn that sends asynchronous function to the currentProvider.\n\n  Parameter:\n  web3 - web3 instance\n\n  Example:\n  user> `(send-async-fn web3)`\n  #object..."]],"~:cljs.spec/registry-ref",[],"~:require-macros",null,"~:cljs.analyzer/constants",["^ ","~:seen",["^8",["~:jsonrpc","~:method","~:params","~:id"]],"~:order",["^1E","^1F","^1G","^1H"]],"^Z","Functions that can be used to control testrpc behaviour. Can ONLY (!) be used\n  with testrpc.\n\n  See https://github.com/ethereumjs/testrpc for more information."]