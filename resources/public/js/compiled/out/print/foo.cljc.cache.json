["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:externs",["^ ","~$Date",["^ ","~$prototype",["^ ","~$getMilliseconds",["^ "]]]],"~:use-macros",["^ "],"~:excludes",["~#set",["~$*print-fn*"]],"~:name","~$print.foo","~:imports",null,"~:requires",["^ ","~$str","~$clojure.string","^?","^?","~$pp","~$cljs.pprint","^A","^A"],"~:cljs.spec/speced-vars",[],"~:uses",null,"~:defs",["^ ","~$get-miliseconds",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","/Users/matus/www/district0x/tcrfactory/resources/public/js/compiled/out/print/foo.cljc","~:line",137,"~:column",7,"~:end-line",137,"~:end-column",22,"~:arglists",["~#list",["~$quote",["^N",[[]]]]]],"^:","~$print.foo/get-miliseconds","~:variadic",false,"^H","resources/public/js/compiled/out/print/foo.cljc","^L",22,"~:method-params",["^N",[[]]],"~:protocol-impl",null,"~:arglists-meta",["^N",[null,null]],"^J",1,"^I",137,"^K",137,"~:max-fixed-arity",0,"~:fn-var",true,"^M",["^N",["^O",["^N",[[]]]]]],"~$parse-list",["^ ","^:","~$print.foo/parse-list","^H","resources/public/js/compiled/out/print/foo.cljc","^I",68,"^J",1,"^K",68,"^L",21,"^G",["^ ","^H","/Users/matus/www/district0x/tcrfactory/resources/public/js/compiled/out/print/foo.cljc","^I",68,"^J",11,"^K",68,"^L",21],"~:tag","~$cljs.core/MultiFn"],"~$resolves-to-fn?",["^ ","^F",null,"^G",["^ ","^H","/Users/matus/www/district0x/tcrfactory/resources/public/js/compiled/out/print/foo.cljc","^I",54,"^J",17,"^K",54,"^L",32,"~:private",true,"^M",["^N",["^O",["^N",[["~$x"]]]]]],"^10",true,"^:","~$print.foo/resolves-to-fn?","^Q",false,"^H","resources/public/js/compiled/out/print/foo.cljc","^L",32,"^R",["^N",[["~$x"]]],"^S",null,"^T",["^N",[null,null]],"^J",1,"^I",54,"^K",54,"^U",1,"^V",true,"^M",["^N",["^O",["^N",[["~$x"]]]]]],"~$tap",["^ ","^:","~$print.foo/tap","^H","resources/public/js/compiled/out/print/foo.cljc","^I",50,"^J",1,"^K",50,"^L",9,"^G",["^ ","^H","/Users/matus/www/district0x/tcrfactory/resources/public/js/compiled/out/print/foo.cljc","^I",50,"^J",6,"^K",50,"^L",9],"~:doc","Quicker-to-type version of `print-and-return` with \" *** \" appended to the front","^Y","~$any"],"~$expand-arg",["^ ","^F",null,"^G",["^ ","^H","/Users/matus/www/district0x/tcrfactory/resources/public/js/compiled/out/print/foo.cljc","^I",35,"^J",17,"^K",35,"^L",27,"^10",true,"^M",["^N",["^O",["^N",[["~$arg"]]]]]],"^10",true,"^:","~$print.foo/expand-arg","^Q",false,"^H","resources/public/js/compiled/out/print/foo.cljc","^L",27,"^R",["^N",[["^17"]]],"^S",null,"^T",["^N",[null,null]],"^J",1,"^I",35,"^K",35,"^U",1,"^V",true,"^M",["^N",["^O",["^N",[["^17"]]]]]],"~$interleave-middlewares",["^ ","^F",null,"^G",["^ ","^H","/Users/matus/www/district0x/tcrfactory/resources/public/js/compiled/out/print/foo.cljc","^I",166,"^J",17,"^K",166,"^L",39,"^10",true,"^M",["^N",["^O",["^N",[["~$handler","~$middlewares",["^ ","~:keys",["~$get-in","~$timings?"],"~:or",["^ ","^1=",[],"^1>",false]]]]]]]],"^10",true,"^:","~$print.foo/interleave-middlewares","^Q",false,"^H","resources/public/js/compiled/out/print/foo.cljc","^L",39,"^R",["^N",[["^1:","^1;","~$p__27669"]]],"^S",null,"^T",["^N",[null,null]],"^J",1,"^I",166,"^K",166,"^U",3,"^V",true,"^M",["^N",["^O",["^N",[["^1:","^1;",["^ ","^1<",["^1=","^1>"],"^1?",["^ ","^1=",[],"^1>",false]]]]]]]],"~$wrap-middleware-debugging",["^ ","^F",null,"^G",["^ ","^H","/Users/matus/www/district0x/tcrfactory/resources/public/js/compiled/out/print/foo.cljc","^I",141,"^J",7,"^K",141,"^L",32,"^M",["^N",["^O",["^N",[["^1:","~$middleware-name",["^ ","^1<",["^1=","~$summarize?","^1>"],"^1?",["^ ","^1=",[],"^1D",true,"^1>",false]]]]]]]],"^:","~$print.foo/wrap-middleware-debugging","^Q",false,"^H","resources/public/js/compiled/out/print/foo.cljc","^L",32,"^R",["^N",[["^1:","^1C","~$p__27665"]]],"^S",null,"^T",["^N",[null,null]],"^J",1,"^I",141,"^K",141,"^U",3,"^V",true,"^M",["^N",["^O",["^N",[["^1:","^1C",["^ ","^1<",["^1=","^1D","^1>"],"^1?",["^ ","^1=",[],"^1D",true,"^1>",false]]]]]]]],"^9",["^ ","^:","~$print.foo/*print-fn*","^H","resources/public/js/compiled/out/print/foo.cljc","^I",10,"^J",1,"^K",10,"^L",26,"~:dynamic",true,"^G",["^ ","^H","/Users/matus/www/district0x/tcrfactory/resources/public/js/compiled/out/print/foo.cljc","^I",10,"^J",16,"^K",10,"^L",26,"^1H",true]],"~$parse-item",["^ ","^:","~$print.foo/parse-item","^H","resources/public/js/compiled/out/print/foo.cljc","^I",58,"^J",1,"^K",58,"^L",21,"^G",["^ ","^H","/Users/matus/www/district0x/tcrfactory/resources/public/js/compiled/out/print/foo.cljc","^I",58,"^J",11,"^K",58,"^L",21],"^Y","^Z"],"~$*enabled*",["^ ","^:","~$print.foo/*enabled*","^H","resources/public/js/compiled/out/print/foo.cljc","^I",11,"^J",1,"^K",11,"^L",25,"^1H",true,"^G",["^ ","^H","/Users/matus/www/district0x/tcrfactory/resources/public/js/compiled/out/print/foo.cljc","^I",11,"^J",16,"^K",11,"^L",25,"^1H",true],"^Y","~$boolean"],"~$single-destructuring-arg->form+name",["^ ","^F",null,"^G",["^ ","^H","/Users/matus/www/district0x/tcrfactory/resources/public/js/compiled/out/print/foo.cljc","^I",13,"^J",17,"^K",13,"^L",52,"^10",true,"^M",["^N",["^O",["^N",[["~$arg-form"]]]]],"^14","Turns any one binding arg (which may be a destructuring binding) into a vector\n  where the left elem is the arg with a possible :as added to it.\n  And the rght side is the symbol referring to the arg itself."],"^10",true,"^:","~$print.foo/single-destructuring-arg->form+name","^Q",false,"^H","resources/public/js/compiled/out/print/foo.cljc","^L",52,"^R",["^N",[["^1O"]]],"^S",null,"^T",["^N",[null,null]],"^J",1,"^I",13,"^K",13,"^U",1,"^V",true,"^M",["^N",["^O",["^N",[["^1O"]]]]],"^14","Turns any one binding arg (which may be a destructuring binding) into a vector\n  where the left elem is the arg with a possible :as added to it.\n  And the rght side is the symbol referring to the arg itself."],"~$print-and-return",["^ ","^F",null,"^G",["^ ","^H","/Users/matus/www/district0x/tcrfactory/resources/public/js/compiled/out/print/foo.cljc","^I",40,"^J",7,"^K",40,"^L",23,"^M",["^N",["^O",["^N",[["~$&","~$xs"]]]]],"^14","Diagnostic tool for printing the result of evaluating an s-expression.\n   Any initial args over 1, are printed as strings, and generally used as a label.","~:top-fn",["^ ","^Q",true,"^U",0,"^R",[["^N",["^1R"]]],"^M",["^N",[["~$&","^1R"]]],"^T",["^N",[null]]]],"^:","~$print.foo/print-and-return","^Q",true,"^H","resources/public/js/compiled/out/print/foo.cljc","^L",23,"^1S",["^ ","^Q",true,"^U",0,"^R",[["^N",["^1R"]]],"^M",["^N",[["~$&","^1R"]]],"^T",["^N",[null]]],"^R",[["^N",["^1R"]]],"^S",null,"^T",["^N",[null]],"^J",1,"^I",40,"^K",40,"^U",0,"^V",true,"^M",["^N",[["~$&","^1R"]]],"^14","Diagnostic tool for printing the result of evaluating an s-expression.\n   Any initial args over 1, are printed as strings, and generally used as a label."]],"~:cljs.spec/registry-ref",[],"~:require-macros",["^ ","^@","^A","^A","^A"],"~:cljs.analyzer/constants",["^ ","~:seen",["^8",["~$cond->>","~$print.foo/print-cond->>","~$print.foo/print-let","~$print.foo/print-defn","~$print.foo/print-cond->","~$symbol-for-destructured-arg","~$print.foo/print-if","~:else","~$cljs.core/->","~:print.foo/timings","~:default","~:as","~$let","~$->","~$print.foo/print-defn-","~$print.foo/print->","~$print.foo/print->>","~:summarize?","~:vector","~$defn","~$if","~:middleware-elapsed","~:sym","~:middleware","~$cljs.core/cond","^1E","~$cond->","~:list","~$defn-","~:middleware-timings","~$cond","~:get-in","^O","~:set","~:hierarchy","^1T","~:map","~:timings?","~$->>"]],"~:order",["^22","^28","^24","^2M","^2G","^2?","^2L","^2N","^2C","^27","^1T","^O","^2:","^2<","^2P","^2=","^2F","^21","^1Y","^1Z","^29","^1[","^2A","^23","^2J","^2E","^2@","^20","^2H","^2;","^2K","^2>","^2O","^26","^2D","^2B","^2I","^1E","^25"]],"^14","Macros for printing diagnostic information while debugging or developing."]